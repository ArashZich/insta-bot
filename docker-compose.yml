version: '3.8'

services:
  db:
    image: postgres:14
    container_name: instagram_bot_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=instagram_bot
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: >
      bash -c "
        echo 'Starting PostgreSQL...' &&
        docker-entrypoint.sh postgres
      "

  app:
    build: .
    container_name: instagram_bot
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/instagram_bot
      - INSTAGRAM_USERNAME=${INSTAGRAM_USERNAME}
      - INSTAGRAM_PASSWORD=${INSTAGRAM_PASSWORD}
    command: >
      bash -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        echo 'Initializing database...' &&
        python -c 'from app.database.init_db import initialize_database; initialize_database()' &&
        echo 'Starting API server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --timeout-keep-alive 300
      "
    restart: always
    
  watchdog:
    build: .
    container_name: instagram_bot_watchdog
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      - app
    command: python -u app/watchdog.py
    restart: always

volumes:
  postgres_data: